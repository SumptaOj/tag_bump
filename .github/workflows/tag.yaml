name: Git Tag Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version update type'
        required: true
        default: 'patch'
        type: 'choice'
        options:
        - 'skip'
        - 'patch'
        - 'minor'
        - 'major'
jobs:
  bump:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "eterno-bot"
          git config user.email "<>"

      - uses: actions/setup-node@v3
        with:
          node-version: 18.3.0
          
      - name: yarn install
        run: yarn install --frozen-lockfile --non-interactive

      - name: Patch version bump
        if: ${{ github.event.inputs.version == 'patch' }}
        run: yarn run bump-patch
    
      - name: Minor version bump
        if: ${{ github.event.inputs.version == 'minor' }}
        run: yarn run bump-minor
    
      - name: Major version bump
        if: ${{ github.event.inputs.version == 'major' }}
        run: yarn run bump-major

      - name: Skip Operation
        if: ${{ github.event.inputs.version == 'skip' }}
        run: echo "Skipping version bump"

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Extract Package Version
        id: extract
        run: |
          PACKAGE_VERSION=$(jq -r .version package.json)
          echo "PACKAGE_VERSION=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"

      - name: Get The Current Tag
        id: current
        run: echo "GIT_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_OUTPUT

      - name: Create tag
        run: |
          PACKAGE_VERSION=${{ steps.extract.outputs.PACKAGE_VERSION }}
          git tag $PACKAGE_VERSION
          git push origin $PACKAGE_VERSION

      # - name: Build Changelog
      #   id: build_changelog
      #   uses: mikepenz/release-changelog-builder-action@v3
      #   with:
      #    ignorePreReleases: "false"
      #    fromTag: ${{ steps.current.outputs.GIT_TAG }}
      #    toTag: ${{ steps.extract.outputs.PACKAGE_VERSION }}
      #    token: ${{ github.TOKEN }}
          

      # - name: Create Release
      #   uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release
      #   with:
      #     body: ${{steps.build_changelog.outputs.changelog}}
          
      
      # - name: Create a release
      #   run: |
      #     PACKAGE_VERSION=${{ steps.extract.outputs.PACKAGE_VERSION }}
      #     curl -L \
      #       -X POST \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ github.TOKEN }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       https://api.github.com/repos/${{ github.repository }}/releases \
      #       -d '{"tag_name":"${{ steps.extract.outputs.PACKAGE_VERSION }}","target_commitish":"main","name":"${{ steps.extract.outputs.PACKAGE_VERSION }}","body":"Description of the release","draft":false,"prerelease":false,"generate_release_notes":false}'

      - name: Create new release note
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/generate-notes \
            -d '{"tag_name":"${{ steps.extract.outputs.PACKAGE_VERSION }}","target_commitish":"main","previous_tag_name":"${{ steps.current.outputs.GIT_TAG }}"}'
